universal 2D
Universal 3D
SRP를 사용하는 프로젝트 템플릿
-> 성능 최적화의 맞춤형 렌더링
설정이 가능합니다(고급 그래픽
기능과 최적화가 필요한 2D/3D 게임에서 사용됩니다.)

SRP 환경에서는 기존의 Built in에서 제공되는 셰이더가
같이 작동되지 않고 새롭게 제공되는 셰이더를 사용합니다.

유니티6 이전의 기존 프로젝트에서 사용되던 형식(Built-in render pipeLine)
유니티에서 기본으로 설정되어있던 파이프라인
확장이 제한적입니다.

※렌더링(rendering)
※파이프라인(pipeLine) : 유니티에서 그래픽 처리에 관련된 작업의 흐름
※버퍼(buffer) : 임시 저장소(데이터를 한 곳에서 다른 한 곳으로 전송하는 동안 일시적으로 해당 데이터를 보관하는 저장 영역)
※텍스쳐(texture) : 이미지

과정 순서
1. 렌더링 설정(라이팅, 쉐이딩, 그림자 옵션을 결정하고 오브젝트의 렌더러를 설정)
2. 렌더링 버퍼 준비 : 화면에 렌더링될 내용을 저장할 메모리 버퍼를 할당하고, 필요한 텍스쳐를 생성합니다.
3. 렌더링 패스 : 카메라 시야 내에 있는 오브젝트에 대한 처리
4. 후처리 및 출력 : 결과물에 대한 후처리, 화면 출력

현재 유니티6부터는 기본 설정이 Universal로 사용합니다.

※ 라이브러리 : 소프트웨어 개발에서 재사용이 가능한 코드 모음
※ 에셋(Asset) : 유니티 내에서 사용하는 폴더, 동영상, 오브젝트 등을 칭하는 말
>> 게임 제작에 필요한 모든 요소를 지칭하는 용어
프로젝트 내에서 사용중인 에셋 별로 벨도의 메타 타입이 생성됩니다.
프레임워크도 라이브러리에 포함되는 개념이며, 라이브러리를 이용하여 어떤 앱을 개발하는데 있어서 필요한 기능들을 미리 만들어 놓는다고 생각하면 편할지도